/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package moduledefault.clustering.visualization;

import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author Mateus
 */
public class GraficoDispersaoGeral extends javax.swing.JPanel {

    /**
     * Creates new form GraficoDispersaoGeral
     */
    private static Color[] coresAux = {Color.RED, Color.BLUE, Color.GREEN, Color.YELLOW, Color.ORANGE, Color.MAGENTA, Color.CYAN, Color.DARK_GRAY, Color.GRAY, Color.BLACK};
    private static Color[] cores;

    public GraficoDispersaoGeral() {
        initComponents();
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        int width = TecnicasDispersao.getFundoDispersaoGeral().getWidth();
        int height = TecnicasDispersao.getFundoDispersaoGeral().getHeight();
        float w = width / 2;
        float h = height / 2;
        float m = width / TecnicasDispersao.getMatrizDados().getLinhas() + 2;
        int tamPixel = (int) m;
        int x0 = 50 + (int) 0 * (width - 120);
        int y0 = (height - 70) - (int) 0 * (height - 120) + tamPixel;
        int x1 = 50 + (int) 1 * (width - 120) + tamPixel;
        int y1 = (height - 70) - (int) 0 * (height - 120) + tamPixel;
        int x2 = 50 + (int) 0 * (width - 120);
        int y2 = (height - 70) - (int) 1 * (height - 120) - tamPixel;
        g.setColor(Color.black);
        g.drawLine(x0, y0, x1, y1);//x
        g.drawLine(x0, y0, x2, y2);//y
        iniciaVetorCores();
        //escala para y
        int aux = 0;
        int escala = (int) (y0 - y2) / 10;
        int soma = y2;
        String[] valores1 = {"1", "0.9", "0.8", "0.7", "0.6", "0.5", "0.4", "0.3", "0.2", "0.1", "0"};
        while (soma <= y0) {
            if (valores1[aux] != "0") {
                g.drawLine(x0 - 5, soma, x0 + 5, soma);
            }
            g.drawString(valores1[aux], x0 - 25, soma + 5);
            aux++;
            soma += escala;
        }
        //escala para x
        aux = 0;
        escala = (int) (x1 - x0) / 10;
        soma = x0;
        String[] valores2 = {"0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
        while (soma <= x1) {
            g.drawLine(soma, y0 - 5, soma, y0 + 5);
            g.drawString(valores2[aux], soma - 7, y0 + 20);
            aux++;
            soma += escala;
        }
        int atributo1 = TecnicasDispersao.getComboBoxEixoX().getSelectedIndex();
        int atributo2 = TecnicasDispersao.getComboBoxEixoY().getSelectedIndex();
        int atributo3 = TecnicasDispersao.getComboBoxEixoZ().getSelectedIndex();
        if (atributo1 != 0 && atributo2 != 0) {
            if (TecnicasDispersao.getMatrizGrupos() != null) {
                for (int i = 0; i < TecnicasDispersao.getMatrizDados().getLinhas(); i++) {
                    int x = 50 + (int) (TecnicasDispersao.getMatrizDados().getMatriz_dados()[i][atributo1] * (width - 120));
                    int y = (height - 70) - (int) (TecnicasDispersao.getMatrizDados().getMatriz_dados()[i][atributo2] * (height - 120));
                    for (int k = 0; k < TecnicasDispersao.getMatrizDados().getRealClasses().size(); k++) {
                        if (TecnicasDispersao.getMatrizDados().getGrupos()[TecnicasDispersao.getMatrizGrupos()[0][i] - 1].equals(TecnicasDispersao.getMatrizDados().getRealClasses().get(k))) {
                            g.setColor(cores[k]);
                        }
                    }
                    g.fillOval(x, y, tamPixel, tamPixel);

                }
                g.setColor(Color.black);
            }
        }

    }

    private void iniciaVetorCores() {
        cores = new Color[TecnicasDispersao.getMatrizDados().getRealClasses().size()];
        for (int i = 0; i < cores.length; i++) {
            cores[i] = coresAux[i];
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder("Visualização"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
